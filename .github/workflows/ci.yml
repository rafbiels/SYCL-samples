name: Continuous Integration

on:
  push:
    branches: [ "test-actions" ]
  pull_request:
    branches: [ "test-actions" ]
      
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BUILD_TYPE: Release

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Path filter
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref_name }}
          filters: |
            container:
              - 'ci/Dockerfile'
      -
        if: steps.changes.outputs.container == 'true'
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        if: steps.changes.outputs.container == 'true'
        name: Log in to the Container registry
        uses: docker/login-action@v3
        with: 
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        if: steps.changes.outputs.container == 'true'
        name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'test-actions') }}
      - 
        if: steps.changes.outputs.container == 'true'
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: '{{defaultContext}}:ci'
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  cmake-build:
    needs: build-container
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rafbiels/sycl-samples
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
